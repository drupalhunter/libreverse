# x86 BNF grammar

<X86_INSTRUCTIONS> := <DATA_TRANSFER_INSTRUCTIONS>

<DATA_TRANSFER_INSTRUCTIONS> := <ADD>

<ADD> := <ADD_BYTE_TO_GEN_REG> |
	<ADD_WORD_TO_GEN_REG> |
	<ADD_GEN_REG_TO_BYTE> |
	<ADD_GEN_REG_TO_WORD> |
	<ADD_BYTE_TO_AL> |
	<ADD_WORD_TO_AX> |
	<ADD_IMMEDIATE_BYTE_TO_GEN_REG> |
	<ADD_IMMEDIATE_WORD_TO_GEN_REG> |
	<ADD_SIGNED_IMMEDIATE_BYTE_TO_GEN_REG>

<ADD_BYTE_TO_GEN_REG> := 0x00 <MOD_RM>

<ADD_WORD_TO_GEN_REG> := 0x01 <MOD_RM>

<ADD_GEN_REG_TO_BYTE> := 0x02 <MOD_RM>

<ADD_GEN_REG_TO_WORD> := 0x03 <MOD_RM>

<ADD_BYTE_TO_AL> := 0x04 byte

<ADD_WORD_TO_AX> := 0x05 word

<ADD_IMMEDIATE_BYTE_TO_GEN_REG> := 0x80 <MOD_FIELD> 000 <RM_FIELD> byte

<ADD_IMMEDIATE_BYTE_TO_GEN_REG> := 0x81 <MOD_FIELD> 000 <RM_FIELD> word

<ADD_SIGNED_IMMEDIATE_BYTE_TO_GEN_REG> := 0x83  <MOD_FIELD> 000 <RM_FIELD> byte

<MOD_RM> := <MOD_FIELD> <REG_FIELD> <RM_FIELD>

<MOD_FIELD> := bits 6 & 7 of mod_rm byte

<REG_FIELD> := bits 3-5 of mod_rm byte

<RM_FIELD> := bits 0-2 of mod_rm byte

