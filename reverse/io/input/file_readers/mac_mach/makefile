# Makefile.in generated by automake 1.10.1 from Makefile.am.
# libreverse/io/input/File_Readers/Mach/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/libreverse
pkglibdir = $(libdir)/libreverse
pkgincludedir = $(includedir)/libreverse
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = libreverse/io/input/File_Readers/Mach
DIST_COMMON = $(am__nobase_include_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/boost.m4 \
	$(top_srcdir)/m4/compiler.m4 $(top_srcdir)/m4/expat.m4 \
	$(top_srcdir)/m4/icu.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/libreverse/include/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libio_mach_la_LIBADD =
am__libio_mach_la_SOURCES_DIST = CPU_PPC_32.cpp CPU_PPC_64.cpp \
	CPU_SubType.cpp CPU_Type.cpp CPU_X86_32.cpp CPU_X86_64.cpp \
	Dylib.cpp Dylib_Command.cpp Dylib_Module.cpp \
	Dylib_Module_64.cpp Dylib_Reference.cpp \
	Dylib_Table_Of_Contents.cpp Dylinker_Command.cpp \
	Dysymtab_Command.cpp Fat_Arch.cpp Fat_Header.cpp \
	Fat_Reader.cpp Fvmfile_Command.cpp Fvmlib.cpp \
	Fvmlib_Command.cpp Ident_Command.cpp LC_Str.cpp \
	Load_Command.cpp Load_Command_Factory.cpp Mach_File.cpp \
	Mach_Header_32.cpp Mach_Header_64.cpp Mach_Meta_Info.cpp \
	Mach_Reader_32.cpp Mach_Reader_64.cpp Nlist.cpp Nlist_64.cpp \
	Prebound_Dylib_Command.cpp Relocation_Info.cpp \
	Routines_Command.cpp Routines_Command_64.cpp \
	Scattered_Relocation_Info.cpp Section.cpp Section_64.cpp \
	Segment_Command.cpp Segment_Command_64.cpp Skipped_Command.cpp \
	Sub_Client_Command.cpp Sub_Framework_Command.cpp \
	Sub_Library_Command.cpp Sub_Umbrella_Command.cpp \
	Symtab_Command.cpp Thread_Command.cpp Twolevel_Hint.cpp \
	Twolevel_Hints_Command.cpp UUID_Command.cpp
am_libio_mach_la_OBJECTS =  \
	libio_mach_la-CPU_PPC_32.lo \
	libio_mach_la-CPU_PPC_64.lo \
	libio_mach_la-CPU_SubType.lo \
	libio_mach_la-CPU_Type.lo \
	libio_mach_la-CPU_X86_32.lo \
	libio_mach_la-CPU_X86_64.lo \
	libio_mach_la-Dylib.lo \
	libio_mach_la-Dylib_Command.lo \
	libio_mach_la-Dylib_Module.lo \
	libio_mach_la-Dylib_Module_64.lo \
	libio_mach_la-Dylib_Reference.lo \
	libio_mach_la-Dylib_Table_Of_Contents.lo \
	libio_mach_la-Dylinker_Command.lo \
	libio_mach_la-Dysymtab_Command.lo \
	libio_mach_la-Fat_Arch.lo \
	libio_mach_la-Fat_Header.lo \
	libio_mach_la-Fat_Reader.lo \
	libio_mach_la-Fvmfile_Command.lo \
	libio_mach_la-Fvmlib.lo \
	libio_mach_la-Fvmlib_Command.lo \
	libio_mach_la-Ident_Command.lo \
	libio_mach_la-LC_Str.lo \
	libio_mach_la-Load_Command.lo \
	libio_mach_la-Load_Command_Factory.lo \
	libio_mach_la-Mach_File.lo \
	libio_mach_la-Mach_Header_32.lo \
	libio_mach_la-Mach_Header_64.lo \
	libio_mach_la-Mach_Meta_Info.lo \
	libio_mach_la-Mach_Reader_32.lo \
	libio_mach_la-Mach_Reader_64.lo \
	libio_mach_la-Nlist.lo \
	libio_mach_la-Nlist_64.lo \
	libio_mach_la-Prebound_Dylib_Command.lo \
	libio_mach_la-Relocation_Info.lo \
	libio_mach_la-Routines_Command.lo \
	libio_mach_la-Routines_Command_64.lo \
	libio_mach_la-Scattered_Relocation_Info.lo \
	libio_mach_la-Section.lo \
	libio_mach_la-Section_64.lo \
	libio_mach_la-Segment_Command.lo \
	libio_mach_la-Segment_Command_64.lo \
	libio_mach_la-Skipped_Command.lo \
	libio_mach_la-Sub_Client_Command.lo \
	libio_mach_la-Sub_Framework_Command.lo \
	libio_mach_la-Sub_Library_Command.lo \
	libio_mach_la-Sub_Umbrella_Command.lo \
	libio_mach_la-Symtab_Command.lo \
	libio_mach_la-Thread_Command.lo \
	libio_mach_la-Twolevel_Hint.lo \
	libio_mach_la-Twolevel_Hints_Command.lo \
	libio_mach_la-UUID_Command.lo
libio_mach_la_OBJECTS = $(am_libio_mach_la_OBJECTS)
libio_mach_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libio_mach_la_LDFLAGS) $(LDFLAGS) -o $@
am_libio_mach_la_rpath =
DEFAULT_INCLUDES = -I. -I$(top_builddir)/libreverse/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libio_mach_la_SOURCES)
DIST_SOURCES = $(am__libio_mach_la_SOURCES_DIST)
am__nobase_include_HEADERS_DIST = CPU_PPC_32.h CPU_PPC_64.h \
	CPU_State_T.cpp CPU_State_T.h CPU_SubType.h CPU_Thread_State.h \
	CPU_Type.h CPU_X86_32.h CPU_X86_64.h Dylib.h Dylib_Command.h \
	Dylib_Module.h Dylib_Module_64.h Dylib_Reference.h \
	Dylib_Table_Of_Contents.h Dylinker_Command.h \
	Dysymtab_Command.h Fat_Arch.h Fat_Header.h Fat_Reader.h \
	Filetypes.h Fvmfile_Command.h Fvmlib.h Fvmlib_Command.h \
	Ident_Command.h LC_Str.h Load_Command.h \
	Load_Command_Constants.h Load_Command_Factory.h Mach_File.h \
	Mach_Header_32.h Mach_Header_64.h Mach_Header_Flags.h \
	Mach_Meta_Info.h Mach_Reader_32.h Mach_Reader_64.h \
	Mach_Types.h Nlist.h Nlist_64.h Prebound_Dylib_Command.h \
	Relocation_Info.h Routines_Command.h Routines_Command_64.h \
	Scattered_Relocation_Info.h Section.h Section_64.h \
	Segment_Command.h Segment_Command_64.h Skipped_Command.h \
	Sub_Client_Command.h Sub_Framework_Command.h \
	Sub_Library_Command.h Sub_Umbrella_Command.h Symtab_Command.h \
	Thread_Command.h Twolevel_Hint.h Twolevel_Hints_Command.h \
	UUID_Command.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(includedir)"
nobase_includeHEADERS_INSTALL = $(install_sh_DATA)
HEADERS = $(nobase_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/storri/src/libreverse/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/storri/src/libreverse/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/storri/src/libreverse/missing --run autoconf
AUTOHEADER = ${SHELL} /home/storri/src/libreverse/missing --run autoheader
AUTOMAKE = ${SHELL} /home/storri/src/libreverse/missing --run automake-1.10
AWK = gawk
BOOST_CPPFLAGS = -I/usr/include/boost-1_34
BOOST_LIBS = -lboost_date_time-gcc-1_34 
BOOST_LIBS_R = -lboost_date_time-gcc-1_34 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O2 -Werror -DNO_LIBREVERSE_DEBUG
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 -Werror -DNO_LIBREVERSE_DEBUG
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXPAT_CFLAGS = -I/usr/include
EXPAT_LIBS = -L/usr/lib
F77 = 
FFLAGS = 
GREP = /bin/grep
ICU_CFLAGS = -I/usr/include
ICU_LIBS = -L/usr/lib
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/storri/src/libreverse/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NMEDIT = 
OBJEXT = o
PACKAGE = libreverse
PACKAGE_BUGREPORT = 
PACKAGE_NAME = libreverse
PACKAGE_STRING = libreverse 0.7
PACKAGE_TARNAME = libreverse
PACKAGE_VERSION = 0.7
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.7
abs_builddir = /home/storri/src/libreverse/libreverse/io/input/File_Readers/Mach
abs_srcdir = /home/storri/src/libreverse/libreverse/io/input/File_Readers/Mach
abs_top_builddir = /home/storri/src/libreverse
abs_top_srcdir = /home/storri/src/libreverse
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include/libreverse/io/input/File_Readers/Mach
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/storri/src/libreverse/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../../../../..
top_srcdir = ../../../../..
noinst_LTLIBRARIES = libio_mach.la
libio_mach_la_CPPFLAGS = \
  -I$(ICU_ROOT)/include \
  -I$(top_srcdir) \
  -DCONFIG_DIRECTORY='"$(sysconfdir)/$(PACKAGE)"'

libio_mach_la_SOURCES = \
  CPU_PPC_32.cpp \
  CPU_PPC_64.cpp \
  CPU_SubType.cpp \
  CPU_Type.cpp \
  CPU_X86_32.cpp \
  CPU_X86_64.cpp \
  Dylib.cpp \
  Dylib_Command.cpp \
  Dylib_Module.cpp \
  Dylib_Module_64.cpp \
  Dylib_Reference.cpp \
  Dylib_Table_Of_Contents.cpp \
  Dylinker_Command.cpp \
  Dysymtab_Command.cpp \
  Fat_Arch.cpp \
  Fat_Header.cpp \
  Fat_Reader.cpp \
  Fvmfile_Command.cpp \
  Fvmlib.cpp \
  Fvmlib_Command.cpp \
  Ident_Command.cpp \
  LC_Str.cpp \
  Load_Command.cpp \
  Load_Command_Factory.cpp \
  Mach_File.cpp \
  Mach_Header_32.cpp \
  Mach_Header_64.cpp \
  Mach_Meta_Info.cpp \
  Mach_Reader_32.cpp \
  Mach_Reader_64.cpp \
  Nlist.cpp \
  Nlist_64.cpp \
  Prebound_Dylib_Command.cpp \
  Relocation_Info.cpp \
  Routines_Command.cpp \
  Routines_Command_64.cpp \
  Scattered_Relocation_Info.cpp \
  Section.cpp \
  Section_64.cpp \
  Segment_Command.cpp \
  Segment_Command_64.cpp \
  Skipped_Command.cpp \
  Sub_Client_Command.cpp \
  Sub_Framework_Command.cpp \
  Sub_Library_Command.cpp \
  Sub_Umbrella_Command.cpp \
  Symtab_Command.cpp \
  Thread_Command.cpp \
  Twolevel_Hint.cpp \
  Twolevel_Hints_Command.cpp \
  UUID_Command.cpp

libio_mach_la_LDFLAGS = \
 -L$(ICU_ROOT)/lib

nobase_include_HEADERS = \
  CPU_PPC_32.h \
  CPU_PPC_64.h \
  CPU_State_T.cpp \
  CPU_State_T.h \
  CPU_SubType.h \
  CPU_Thread_State.h \
  CPU_Type.h \
  CPU_X86_32.h \
  CPU_X86_64.h \
  Dylib.h \
  Dylib_Command.h \
  Dylib_Module.h \
  Dylib_Module_64.h \
  Dylib_Reference.h \
  Dylib_Table_Of_Contents.h \
  Dylinker_Command.h \
  Dysymtab_Command.h \
  Fat_Arch.h \
  Fat_Header.h \
  Fat_Reader.h \
  Filetypes.h \
  Fvmfile_Command.h \
  Fvmlib.h \
  Fvmlib_Command.h \
  Ident_Command.h \
  LC_Str.h \
  Load_Command.h \
  Load_Command_Constants.h \
  Load_Command_Factory.h \
  Mach_File.h \
  Mach_Header_32.h \
  Mach_Header_64.h \
  Mach_Header_Flags.h \
  Mach_Meta_Info.h \
  Mach_Reader_32.h \
  Mach_Reader_64.h \
  Mach_Types.h \
  Nlist.h \
  Nlist_64.h \
  Prebound_Dylib_Command.h \
  Relocation_Info.h \
  Routines_Command.h \
  Routines_Command_64.h \
  Scattered_Relocation_Info.h \
  Section.h \
  Section_64.h \
  Segment_Command.h \
  Segment_Command_64.h \
  Skipped_Command.h \
  Sub_Client_Command.h \
  Sub_Framework_Command.h \
  Sub_Library_Command.h \
  Sub_Umbrella_Command.h \
  Symtab_Command.h \
  Thread_Command.h \
  Twolevel_Hint.h \
  Twolevel_Hints_Command.h \
  UUID_Command.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libreverse/io/input/File_Readers/Mach/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libreverse/io/input/File_Readers/Mach/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libio_mach.la: $(libio_mach_la_OBJECTS) $(libio_mach_la_DEPENDENCIES) 
	$(libio_mach_la_LINK) $(am_libio_mach_la_rpath) $(libio_mach_la_OBJECTS) $(libio_mach_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libio_mach_la-CPU_PPC_32.Plo
include ./$(DEPDIR)/libio_mach_la-CPU_PPC_64.Plo
include ./$(DEPDIR)/libio_mach_la-CPU_SubType.Plo
include ./$(DEPDIR)/libio_mach_la-CPU_Type.Plo
include ./$(DEPDIR)/libio_mach_la-CPU_X86_32.Plo
include ./$(DEPDIR)/libio_mach_la-CPU_X86_64.Plo
include ./$(DEPDIR)/libio_mach_la-Dylib.Plo
include ./$(DEPDIR)/libio_mach_la-Dylib_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Dylib_Module.Plo
include ./$(DEPDIR)/libio_mach_la-Dylib_Module_64.Plo
include ./$(DEPDIR)/libio_mach_la-Dylib_Reference.Plo
include ./$(DEPDIR)/libio_mach_la-Dylib_Table_Of_Contents.Plo
include ./$(DEPDIR)/libio_mach_la-Dylinker_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Dysymtab_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Fat_Arch.Plo
include ./$(DEPDIR)/libio_mach_la-Fat_Header.Plo
include ./$(DEPDIR)/libio_mach_la-Fat_Reader.Plo
include ./$(DEPDIR)/libio_mach_la-Fvmfile_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Fvmlib.Plo
include ./$(DEPDIR)/libio_mach_la-Fvmlib_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Ident_Command.Plo
include ./$(DEPDIR)/libio_mach_la-LC_Str.Plo
include ./$(DEPDIR)/libio_mach_la-Load_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Load_Command_Factory.Plo
include ./$(DEPDIR)/libio_mach_la-Mach_File.Plo
include ./$(DEPDIR)/libio_mach_la-Mach_Header_32.Plo
include ./$(DEPDIR)/libio_mach_la-Mach_Header_64.Plo
include ./$(DEPDIR)/libio_mach_la-Mach_Meta_Info.Plo
include ./$(DEPDIR)/libio_mach_la-Mach_Reader_32.Plo
include ./$(DEPDIR)/libio_mach_la-Mach_Reader_64.Plo
include ./$(DEPDIR)/libio_mach_la-Nlist.Plo
include ./$(DEPDIR)/libio_mach_la-Nlist_64.Plo
include ./$(DEPDIR)/libio_mach_la-Prebound_Dylib_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Relocation_Info.Plo
include ./$(DEPDIR)/libio_mach_la-Routines_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Routines_Command_64.Plo
include ./$(DEPDIR)/libio_mach_la-Scattered_Relocation_Info.Plo
include ./$(DEPDIR)/libio_mach_la-Section.Plo
include ./$(DEPDIR)/libio_mach_la-Section_64.Plo
include ./$(DEPDIR)/libio_mach_la-Segment_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Segment_Command_64.Plo
include ./$(DEPDIR)/libio_mach_la-Skipped_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Sub_Client_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Sub_Framework_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Sub_Library_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Sub_Umbrella_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Symtab_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Thread_Command.Plo
include ./$(DEPDIR)/libio_mach_la-Twolevel_Hint.Plo
include ./$(DEPDIR)/libio_mach_la-Twolevel_Hints_Command.Plo
include ./$(DEPDIR)/libio_mach_la-UUID_Command.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libio_mach_la-CPU_PPC_32.lo: CPU_PPC_32.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-CPU_PPC_32.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-CPU_PPC_32.Tpo -c -o libio_mach_la-CPU_PPC_32.lo `test -f 'CPU_PPC_32.cpp' || echo '$(srcdir)/'`CPU_PPC_32.cpp
	mv -f $(DEPDIR)/libio_mach_la-CPU_PPC_32.Tpo $(DEPDIR)/libio_mach_la-CPU_PPC_32.Plo
#	source='CPU_PPC_32.cpp' object='libio_mach_la-CPU_PPC_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-CPU_PPC_32.lo `test -f 'CPU_PPC_32.cpp' || echo '$(srcdir)/'`CPU_PPC_32.cpp

libio_mach_la-CPU_PPC_64.lo: CPU_PPC_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-CPU_PPC_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-CPU_PPC_64.Tpo -c -o libio_mach_la-CPU_PPC_64.lo `test -f 'CPU_PPC_64.cpp' || echo '$(srcdir)/'`CPU_PPC_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-CPU_PPC_64.Tpo $(DEPDIR)/libio_mach_la-CPU_PPC_64.Plo
#	source='CPU_PPC_64.cpp' object='libio_mach_la-CPU_PPC_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-CPU_PPC_64.lo `test -f 'CPU_PPC_64.cpp' || echo '$(srcdir)/'`CPU_PPC_64.cpp

libio_mach_la-CPU_SubType.lo: CPU_SubType.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-CPU_SubType.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-CPU_SubType.Tpo -c -o libio_mach_la-CPU_SubType.lo `test -f 'CPU_SubType.cpp' || echo '$(srcdir)/'`CPU_SubType.cpp
	mv -f $(DEPDIR)/libio_mach_la-CPU_SubType.Tpo $(DEPDIR)/libio_mach_la-CPU_SubType.Plo
#	source='CPU_SubType.cpp' object='libio_mach_la-CPU_SubType.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-CPU_SubType.lo `test -f 'CPU_SubType.cpp' || echo '$(srcdir)/'`CPU_SubType.cpp

libio_mach_la-CPU_Type.lo: CPU_Type.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-CPU_Type.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-CPU_Type.Tpo -c -o libio_mach_la-CPU_Type.lo `test -f 'CPU_Type.cpp' || echo '$(srcdir)/'`CPU_Type.cpp
	mv -f $(DEPDIR)/libio_mach_la-CPU_Type.Tpo $(DEPDIR)/libio_mach_la-CPU_Type.Plo
#	source='CPU_Type.cpp' object='libio_mach_la-CPU_Type.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-CPU_Type.lo `test -f 'CPU_Type.cpp' || echo '$(srcdir)/'`CPU_Type.cpp

libio_mach_la-CPU_X86_32.lo: CPU_X86_32.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-CPU_X86_32.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-CPU_X86_32.Tpo -c -o libio_mach_la-CPU_X86_32.lo `test -f 'CPU_X86_32.cpp' || echo '$(srcdir)/'`CPU_X86_32.cpp
	mv -f $(DEPDIR)/libio_mach_la-CPU_X86_32.Tpo $(DEPDIR)/libio_mach_la-CPU_X86_32.Plo
#	source='CPU_X86_32.cpp' object='libio_mach_la-CPU_X86_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-CPU_X86_32.lo `test -f 'CPU_X86_32.cpp' || echo '$(srcdir)/'`CPU_X86_32.cpp

libio_mach_la-CPU_X86_64.lo: CPU_X86_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-CPU_X86_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-CPU_X86_64.Tpo -c -o libio_mach_la-CPU_X86_64.lo `test -f 'CPU_X86_64.cpp' || echo '$(srcdir)/'`CPU_X86_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-CPU_X86_64.Tpo $(DEPDIR)/libio_mach_la-CPU_X86_64.Plo
#	source='CPU_X86_64.cpp' object='libio_mach_la-CPU_X86_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-CPU_X86_64.lo `test -f 'CPU_X86_64.cpp' || echo '$(srcdir)/'`CPU_X86_64.cpp

libio_mach_la-Dylib.lo: Dylib.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dylib.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dylib.Tpo -c -o libio_mach_la-Dylib.lo `test -f 'Dylib.cpp' || echo '$(srcdir)/'`Dylib.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dylib.Tpo $(DEPDIR)/libio_mach_la-Dylib.Plo
#	source='Dylib.cpp' object='libio_mach_la-Dylib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dylib.lo `test -f 'Dylib.cpp' || echo '$(srcdir)/'`Dylib.cpp

libio_mach_la-Dylib_Command.lo: Dylib_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dylib_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dylib_Command.Tpo -c -o libio_mach_la-Dylib_Command.lo `test -f 'Dylib_Command.cpp' || echo '$(srcdir)/'`Dylib_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dylib_Command.Tpo $(DEPDIR)/libio_mach_la-Dylib_Command.Plo
#	source='Dylib_Command.cpp' object='libio_mach_la-Dylib_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dylib_Command.lo `test -f 'Dylib_Command.cpp' || echo '$(srcdir)/'`Dylib_Command.cpp

libio_mach_la-Dylib_Module.lo: Dylib_Module.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dylib_Module.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dylib_Module.Tpo -c -o libio_mach_la-Dylib_Module.lo `test -f 'Dylib_Module.cpp' || echo '$(srcdir)/'`Dylib_Module.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dylib_Module.Tpo $(DEPDIR)/libio_mach_la-Dylib_Module.Plo
#	source='Dylib_Module.cpp' object='libio_mach_la-Dylib_Module.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dylib_Module.lo `test -f 'Dylib_Module.cpp' || echo '$(srcdir)/'`Dylib_Module.cpp

libio_mach_la-Dylib_Module_64.lo: Dylib_Module_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dylib_Module_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dylib_Module_64.Tpo -c -o libio_mach_la-Dylib_Module_64.lo `test -f 'Dylib_Module_64.cpp' || echo '$(srcdir)/'`Dylib_Module_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dylib_Module_64.Tpo $(DEPDIR)/libio_mach_la-Dylib_Module_64.Plo
#	source='Dylib_Module_64.cpp' object='libio_mach_la-Dylib_Module_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dylib_Module_64.lo `test -f 'Dylib_Module_64.cpp' || echo '$(srcdir)/'`Dylib_Module_64.cpp

libio_mach_la-Dylib_Reference.lo: Dylib_Reference.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dylib_Reference.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dylib_Reference.Tpo -c -o libio_mach_la-Dylib_Reference.lo `test -f 'Dylib_Reference.cpp' || echo '$(srcdir)/'`Dylib_Reference.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dylib_Reference.Tpo $(DEPDIR)/libio_mach_la-Dylib_Reference.Plo
#	source='Dylib_Reference.cpp' object='libio_mach_la-Dylib_Reference.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dylib_Reference.lo `test -f 'Dylib_Reference.cpp' || echo '$(srcdir)/'`Dylib_Reference.cpp

libio_mach_la-Dylib_Table_Of_Contents.lo: Dylib_Table_Of_Contents.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dylib_Table_Of_Contents.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dylib_Table_Of_Contents.Tpo -c -o libio_mach_la-Dylib_Table_Of_Contents.lo `test -f 'Dylib_Table_Of_Contents.cpp' || echo '$(srcdir)/'`Dylib_Table_Of_Contents.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dylib_Table_Of_Contents.Tpo $(DEPDIR)/libio_mach_la-Dylib_Table_Of_Contents.Plo
#	source='Dylib_Table_Of_Contents.cpp' object='libio_mach_la-Dylib_Table_Of_Contents.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dylib_Table_Of_Contents.lo `test -f 'Dylib_Table_Of_Contents.cpp' || echo '$(srcdir)/'`Dylib_Table_Of_Contents.cpp

libio_mach_la-Dylinker_Command.lo: Dylinker_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dylinker_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dylinker_Command.Tpo -c -o libio_mach_la-Dylinker_Command.lo `test -f 'Dylinker_Command.cpp' || echo '$(srcdir)/'`Dylinker_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dylinker_Command.Tpo $(DEPDIR)/libio_mach_la-Dylinker_Command.Plo
#	source='Dylinker_Command.cpp' object='libio_mach_la-Dylinker_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dylinker_Command.lo `test -f 'Dylinker_Command.cpp' || echo '$(srcdir)/'`Dylinker_Command.cpp

libio_mach_la-Dysymtab_Command.lo: Dysymtab_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Dysymtab_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Dysymtab_Command.Tpo -c -o libio_mach_la-Dysymtab_Command.lo `test -f 'Dysymtab_Command.cpp' || echo '$(srcdir)/'`Dysymtab_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Dysymtab_Command.Tpo $(DEPDIR)/libio_mach_la-Dysymtab_Command.Plo
#	source='Dysymtab_Command.cpp' object='libio_mach_la-Dysymtab_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Dysymtab_Command.lo `test -f 'Dysymtab_Command.cpp' || echo '$(srcdir)/'`Dysymtab_Command.cpp

libio_mach_la-Fat_Arch.lo: Fat_Arch.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Fat_Arch.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Fat_Arch.Tpo -c -o libio_mach_la-Fat_Arch.lo `test -f 'Fat_Arch.cpp' || echo '$(srcdir)/'`Fat_Arch.cpp
	mv -f $(DEPDIR)/libio_mach_la-Fat_Arch.Tpo $(DEPDIR)/libio_mach_la-Fat_Arch.Plo
#	source='Fat_Arch.cpp' object='libio_mach_la-Fat_Arch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Fat_Arch.lo `test -f 'Fat_Arch.cpp' || echo '$(srcdir)/'`Fat_Arch.cpp

libio_mach_la-Fat_Header.lo: Fat_Header.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Fat_Header.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Fat_Header.Tpo -c -o libio_mach_la-Fat_Header.lo `test -f 'Fat_Header.cpp' || echo '$(srcdir)/'`Fat_Header.cpp
	mv -f $(DEPDIR)/libio_mach_la-Fat_Header.Tpo $(DEPDIR)/libio_mach_la-Fat_Header.Plo
#	source='Fat_Header.cpp' object='libio_mach_la-Fat_Header.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Fat_Header.lo `test -f 'Fat_Header.cpp' || echo '$(srcdir)/'`Fat_Header.cpp

libio_mach_la-Fat_Reader.lo: Fat_Reader.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Fat_Reader.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Fat_Reader.Tpo -c -o libio_mach_la-Fat_Reader.lo `test -f 'Fat_Reader.cpp' || echo '$(srcdir)/'`Fat_Reader.cpp
	mv -f $(DEPDIR)/libio_mach_la-Fat_Reader.Tpo $(DEPDIR)/libio_mach_la-Fat_Reader.Plo
#	source='Fat_Reader.cpp' object='libio_mach_la-Fat_Reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Fat_Reader.lo `test -f 'Fat_Reader.cpp' || echo '$(srcdir)/'`Fat_Reader.cpp

libio_mach_la-Fvmfile_Command.lo: Fvmfile_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Fvmfile_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Fvmfile_Command.Tpo -c -o libio_mach_la-Fvmfile_Command.lo `test -f 'Fvmfile_Command.cpp' || echo '$(srcdir)/'`Fvmfile_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Fvmfile_Command.Tpo $(DEPDIR)/libio_mach_la-Fvmfile_Command.Plo
#	source='Fvmfile_Command.cpp' object='libio_mach_la-Fvmfile_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Fvmfile_Command.lo `test -f 'Fvmfile_Command.cpp' || echo '$(srcdir)/'`Fvmfile_Command.cpp

libio_mach_la-Fvmlib.lo: Fvmlib.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Fvmlib.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Fvmlib.Tpo -c -o libio_mach_la-Fvmlib.lo `test -f 'Fvmlib.cpp' || echo '$(srcdir)/'`Fvmlib.cpp
	mv -f $(DEPDIR)/libio_mach_la-Fvmlib.Tpo $(DEPDIR)/libio_mach_la-Fvmlib.Plo
#	source='Fvmlib.cpp' object='libio_mach_la-Fvmlib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Fvmlib.lo `test -f 'Fvmlib.cpp' || echo '$(srcdir)/'`Fvmlib.cpp

libio_mach_la-Fvmlib_Command.lo: Fvmlib_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Fvmlib_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Fvmlib_Command.Tpo -c -o libio_mach_la-Fvmlib_Command.lo `test -f 'Fvmlib_Command.cpp' || echo '$(srcdir)/'`Fvmlib_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Fvmlib_Command.Tpo $(DEPDIR)/libio_mach_la-Fvmlib_Command.Plo
#	source='Fvmlib_Command.cpp' object='libio_mach_la-Fvmlib_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Fvmlib_Command.lo `test -f 'Fvmlib_Command.cpp' || echo '$(srcdir)/'`Fvmlib_Command.cpp

libio_mach_la-Ident_Command.lo: Ident_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Ident_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Ident_Command.Tpo -c -o libio_mach_la-Ident_Command.lo `test -f 'Ident_Command.cpp' || echo '$(srcdir)/'`Ident_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Ident_Command.Tpo $(DEPDIR)/libio_mach_la-Ident_Command.Plo
#	source='Ident_Command.cpp' object='libio_mach_la-Ident_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Ident_Command.lo `test -f 'Ident_Command.cpp' || echo '$(srcdir)/'`Ident_Command.cpp

libio_mach_la-LC_Str.lo: LC_Str.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-LC_Str.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-LC_Str.Tpo -c -o libio_mach_la-LC_Str.lo `test -f 'LC_Str.cpp' || echo '$(srcdir)/'`LC_Str.cpp
	mv -f $(DEPDIR)/libio_mach_la-LC_Str.Tpo $(DEPDIR)/libio_mach_la-LC_Str.Plo
#	source='LC_Str.cpp' object='libio_mach_la-LC_Str.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-LC_Str.lo `test -f 'LC_Str.cpp' || echo '$(srcdir)/'`LC_Str.cpp

libio_mach_la-Load_Command.lo: Load_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Load_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Load_Command.Tpo -c -o libio_mach_la-Load_Command.lo `test -f 'Load_Command.cpp' || echo '$(srcdir)/'`Load_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Load_Command.Tpo $(DEPDIR)/libio_mach_la-Load_Command.Plo
#	source='Load_Command.cpp' object='libio_mach_la-Load_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Load_Command.lo `test -f 'Load_Command.cpp' || echo '$(srcdir)/'`Load_Command.cpp

libio_mach_la-Load_Command_Factory.lo: Load_Command_Factory.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Load_Command_Factory.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Load_Command_Factory.Tpo -c -o libio_mach_la-Load_Command_Factory.lo `test -f 'Load_Command_Factory.cpp' || echo '$(srcdir)/'`Load_Command_Factory.cpp
	mv -f $(DEPDIR)/libio_mach_la-Load_Command_Factory.Tpo $(DEPDIR)/libio_mach_la-Load_Command_Factory.Plo
#	source='Load_Command_Factory.cpp' object='libio_mach_la-Load_Command_Factory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Load_Command_Factory.lo `test -f 'Load_Command_Factory.cpp' || echo '$(srcdir)/'`Load_Command_Factory.cpp

libio_mach_la-Mach_File.lo: Mach_File.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Mach_File.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Mach_File.Tpo -c -o libio_mach_la-Mach_File.lo `test -f 'Mach_File.cpp' || echo '$(srcdir)/'`Mach_File.cpp
	mv -f $(DEPDIR)/libio_mach_la-Mach_File.Tpo $(DEPDIR)/libio_mach_la-Mach_File.Plo
#	source='Mach_File.cpp' object='libio_mach_la-Mach_File.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Mach_File.lo `test -f 'Mach_File.cpp' || echo '$(srcdir)/'`Mach_File.cpp

libio_mach_la-Mach_Header_32.lo: Mach_Header_32.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Mach_Header_32.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Mach_Header_32.Tpo -c -o libio_mach_la-Mach_Header_32.lo `test -f 'Mach_Header_32.cpp' || echo '$(srcdir)/'`Mach_Header_32.cpp
	mv -f $(DEPDIR)/libio_mach_la-Mach_Header_32.Tpo $(DEPDIR)/libio_mach_la-Mach_Header_32.Plo
#	source='Mach_Header_32.cpp' object='libio_mach_la-Mach_Header_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Mach_Header_32.lo `test -f 'Mach_Header_32.cpp' || echo '$(srcdir)/'`Mach_Header_32.cpp

libio_mach_la-Mach_Header_64.lo: Mach_Header_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Mach_Header_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Mach_Header_64.Tpo -c -o libio_mach_la-Mach_Header_64.lo `test -f 'Mach_Header_64.cpp' || echo '$(srcdir)/'`Mach_Header_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-Mach_Header_64.Tpo $(DEPDIR)/libio_mach_la-Mach_Header_64.Plo
#	source='Mach_Header_64.cpp' object='libio_mach_la-Mach_Header_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Mach_Header_64.lo `test -f 'Mach_Header_64.cpp' || echo '$(srcdir)/'`Mach_Header_64.cpp

libio_mach_la-Mach_Meta_Info.lo: Mach_Meta_Info.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Mach_Meta_Info.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Mach_Meta_Info.Tpo -c -o libio_mach_la-Mach_Meta_Info.lo `test -f 'Mach_Meta_Info.cpp' || echo '$(srcdir)/'`Mach_Meta_Info.cpp
	mv -f $(DEPDIR)/libio_mach_la-Mach_Meta_Info.Tpo $(DEPDIR)/libio_mach_la-Mach_Meta_Info.Plo
#	source='Mach_Meta_Info.cpp' object='libio_mach_la-Mach_Meta_Info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Mach_Meta_Info.lo `test -f 'Mach_Meta_Info.cpp' || echo '$(srcdir)/'`Mach_Meta_Info.cpp

libio_mach_la-Mach_Reader_32.lo: Mach_Reader_32.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Mach_Reader_32.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Mach_Reader_32.Tpo -c -o libio_mach_la-Mach_Reader_32.lo `test -f 'Mach_Reader_32.cpp' || echo '$(srcdir)/'`Mach_Reader_32.cpp
	mv -f $(DEPDIR)/libio_mach_la-Mach_Reader_32.Tpo $(DEPDIR)/libio_mach_la-Mach_Reader_32.Plo
#	source='Mach_Reader_32.cpp' object='libio_mach_la-Mach_Reader_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Mach_Reader_32.lo `test -f 'Mach_Reader_32.cpp' || echo '$(srcdir)/'`Mach_Reader_32.cpp

libio_mach_la-Mach_Reader_64.lo: Mach_Reader_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Mach_Reader_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Mach_Reader_64.Tpo -c -o libio_mach_la-Mach_Reader_64.lo `test -f 'Mach_Reader_64.cpp' || echo '$(srcdir)/'`Mach_Reader_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-Mach_Reader_64.Tpo $(DEPDIR)/libio_mach_la-Mach_Reader_64.Plo
#	source='Mach_Reader_64.cpp' object='libio_mach_la-Mach_Reader_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Mach_Reader_64.lo `test -f 'Mach_Reader_64.cpp' || echo '$(srcdir)/'`Mach_Reader_64.cpp

libio_mach_la-Nlist.lo: Nlist.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Nlist.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Nlist.Tpo -c -o libio_mach_la-Nlist.lo `test -f 'Nlist.cpp' || echo '$(srcdir)/'`Nlist.cpp
	mv -f $(DEPDIR)/libio_mach_la-Nlist.Tpo $(DEPDIR)/libio_mach_la-Nlist.Plo
#	source='Nlist.cpp' object='libio_mach_la-Nlist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Nlist.lo `test -f 'Nlist.cpp' || echo '$(srcdir)/'`Nlist.cpp

libio_mach_la-Nlist_64.lo: Nlist_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Nlist_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Nlist_64.Tpo -c -o libio_mach_la-Nlist_64.lo `test -f 'Nlist_64.cpp' || echo '$(srcdir)/'`Nlist_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-Nlist_64.Tpo $(DEPDIR)/libio_mach_la-Nlist_64.Plo
#	source='Nlist_64.cpp' object='libio_mach_la-Nlist_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Nlist_64.lo `test -f 'Nlist_64.cpp' || echo '$(srcdir)/'`Nlist_64.cpp

libio_mach_la-Prebound_Dylib_Command.lo: Prebound_Dylib_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Prebound_Dylib_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Prebound_Dylib_Command.Tpo -c -o libio_mach_la-Prebound_Dylib_Command.lo `test -f 'Prebound_Dylib_Command.cpp' || echo '$(srcdir)/'`Prebound_Dylib_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Prebound_Dylib_Command.Tpo $(DEPDIR)/libio_mach_la-Prebound_Dylib_Command.Plo
#	source='Prebound_Dylib_Command.cpp' object='libio_mach_la-Prebound_Dylib_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Prebound_Dylib_Command.lo `test -f 'Prebound_Dylib_Command.cpp' || echo '$(srcdir)/'`Prebound_Dylib_Command.cpp

libio_mach_la-Relocation_Info.lo: Relocation_Info.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Relocation_Info.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Relocation_Info.Tpo -c -o libio_mach_la-Relocation_Info.lo `test -f 'Relocation_Info.cpp' || echo '$(srcdir)/'`Relocation_Info.cpp
	mv -f $(DEPDIR)/libio_mach_la-Relocation_Info.Tpo $(DEPDIR)/libio_mach_la-Relocation_Info.Plo
#	source='Relocation_Info.cpp' object='libio_mach_la-Relocation_Info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Relocation_Info.lo `test -f 'Relocation_Info.cpp' || echo '$(srcdir)/'`Relocation_Info.cpp

libio_mach_la-Routines_Command.lo: Routines_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Routines_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Routines_Command.Tpo -c -o libio_mach_la-Routines_Command.lo `test -f 'Routines_Command.cpp' || echo '$(srcdir)/'`Routines_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Routines_Command.Tpo $(DEPDIR)/libio_mach_la-Routines_Command.Plo
#	source='Routines_Command.cpp' object='libio_mach_la-Routines_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Routines_Command.lo `test -f 'Routines_Command.cpp' || echo '$(srcdir)/'`Routines_Command.cpp

libio_mach_la-Routines_Command_64.lo: Routines_Command_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Routines_Command_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Routines_Command_64.Tpo -c -o libio_mach_la-Routines_Command_64.lo `test -f 'Routines_Command_64.cpp' || echo '$(srcdir)/'`Routines_Command_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-Routines_Command_64.Tpo $(DEPDIR)/libio_mach_la-Routines_Command_64.Plo
#	source='Routines_Command_64.cpp' object='libio_mach_la-Routines_Command_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Routines_Command_64.lo `test -f 'Routines_Command_64.cpp' || echo '$(srcdir)/'`Routines_Command_64.cpp

libio_mach_la-Scattered_Relocation_Info.lo: Scattered_Relocation_Info.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Scattered_Relocation_Info.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Scattered_Relocation_Info.Tpo -c -o libio_mach_la-Scattered_Relocation_Info.lo `test -f 'Scattered_Relocation_Info.cpp' || echo '$(srcdir)/'`Scattered_Relocation_Info.cpp
	mv -f $(DEPDIR)/libio_mach_la-Scattered_Relocation_Info.Tpo $(DEPDIR)/libio_mach_la-Scattered_Relocation_Info.Plo
#	source='Scattered_Relocation_Info.cpp' object='libio_mach_la-Scattered_Relocation_Info.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Scattered_Relocation_Info.lo `test -f 'Scattered_Relocation_Info.cpp' || echo '$(srcdir)/'`Scattered_Relocation_Info.cpp

libio_mach_la-Section.lo: Section.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Section.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Section.Tpo -c -o libio_mach_la-Section.lo `test -f 'Section.cpp' || echo '$(srcdir)/'`Section.cpp
	mv -f $(DEPDIR)/libio_mach_la-Section.Tpo $(DEPDIR)/libio_mach_la-Section.Plo
#	source='Section.cpp' object='libio_mach_la-Section.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Section.lo `test -f 'Section.cpp' || echo '$(srcdir)/'`Section.cpp

libio_mach_la-Section_64.lo: Section_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Section_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Section_64.Tpo -c -o libio_mach_la-Section_64.lo `test -f 'Section_64.cpp' || echo '$(srcdir)/'`Section_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-Section_64.Tpo $(DEPDIR)/libio_mach_la-Section_64.Plo
#	source='Section_64.cpp' object='libio_mach_la-Section_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Section_64.lo `test -f 'Section_64.cpp' || echo '$(srcdir)/'`Section_64.cpp

libio_mach_la-Segment_Command.lo: Segment_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Segment_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Segment_Command.Tpo -c -o libio_mach_la-Segment_Command.lo `test -f 'Segment_Command.cpp' || echo '$(srcdir)/'`Segment_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Segment_Command.Tpo $(DEPDIR)/libio_mach_la-Segment_Command.Plo
#	source='Segment_Command.cpp' object='libio_mach_la-Segment_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Segment_Command.lo `test -f 'Segment_Command.cpp' || echo '$(srcdir)/'`Segment_Command.cpp

libio_mach_la-Segment_Command_64.lo: Segment_Command_64.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Segment_Command_64.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Segment_Command_64.Tpo -c -o libio_mach_la-Segment_Command_64.lo `test -f 'Segment_Command_64.cpp' || echo '$(srcdir)/'`Segment_Command_64.cpp
	mv -f $(DEPDIR)/libio_mach_la-Segment_Command_64.Tpo $(DEPDIR)/libio_mach_la-Segment_Command_64.Plo
#	source='Segment_Command_64.cpp' object='libio_mach_la-Segment_Command_64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Segment_Command_64.lo `test -f 'Segment_Command_64.cpp' || echo '$(srcdir)/'`Segment_Command_64.cpp

libio_mach_la-Skipped_Command.lo: Skipped_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Skipped_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Skipped_Command.Tpo -c -o libio_mach_la-Skipped_Command.lo `test -f 'Skipped_Command.cpp' || echo '$(srcdir)/'`Skipped_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Skipped_Command.Tpo $(DEPDIR)/libio_mach_la-Skipped_Command.Plo
#	source='Skipped_Command.cpp' object='libio_mach_la-Skipped_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Skipped_Command.lo `test -f 'Skipped_Command.cpp' || echo '$(srcdir)/'`Skipped_Command.cpp

libio_mach_la-Sub_Client_Command.lo: Sub_Client_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Sub_Client_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Sub_Client_Command.Tpo -c -o libio_mach_la-Sub_Client_Command.lo `test -f 'Sub_Client_Command.cpp' || echo '$(srcdir)/'`Sub_Client_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Sub_Client_Command.Tpo $(DEPDIR)/libio_mach_la-Sub_Client_Command.Plo
#	source='Sub_Client_Command.cpp' object='libio_mach_la-Sub_Client_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Sub_Client_Command.lo `test -f 'Sub_Client_Command.cpp' || echo '$(srcdir)/'`Sub_Client_Command.cpp

libio_mach_la-Sub_Framework_Command.lo: Sub_Framework_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Sub_Framework_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Sub_Framework_Command.Tpo -c -o libio_mach_la-Sub_Framework_Command.lo `test -f 'Sub_Framework_Command.cpp' || echo '$(srcdir)/'`Sub_Framework_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Sub_Framework_Command.Tpo $(DEPDIR)/libio_mach_la-Sub_Framework_Command.Plo
#	source='Sub_Framework_Command.cpp' object='libio_mach_la-Sub_Framework_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Sub_Framework_Command.lo `test -f 'Sub_Framework_Command.cpp' || echo '$(srcdir)/'`Sub_Framework_Command.cpp

libio_mach_la-Sub_Library_Command.lo: Sub_Library_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Sub_Library_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Sub_Library_Command.Tpo -c -o libio_mach_la-Sub_Library_Command.lo `test -f 'Sub_Library_Command.cpp' || echo '$(srcdir)/'`Sub_Library_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Sub_Library_Command.Tpo $(DEPDIR)/libio_mach_la-Sub_Library_Command.Plo
#	source='Sub_Library_Command.cpp' object='libio_mach_la-Sub_Library_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Sub_Library_Command.lo `test -f 'Sub_Library_Command.cpp' || echo '$(srcdir)/'`Sub_Library_Command.cpp

libio_mach_la-Sub_Umbrella_Command.lo: Sub_Umbrella_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Sub_Umbrella_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Sub_Umbrella_Command.Tpo -c -o libio_mach_la-Sub_Umbrella_Command.lo `test -f 'Sub_Umbrella_Command.cpp' || echo '$(srcdir)/'`Sub_Umbrella_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Sub_Umbrella_Command.Tpo $(DEPDIR)/libio_mach_la-Sub_Umbrella_Command.Plo
#	source='Sub_Umbrella_Command.cpp' object='libio_mach_la-Sub_Umbrella_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Sub_Umbrella_Command.lo `test -f 'Sub_Umbrella_Command.cpp' || echo '$(srcdir)/'`Sub_Umbrella_Command.cpp

libio_mach_la-Symtab_Command.lo: Symtab_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Symtab_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Symtab_Command.Tpo -c -o libio_mach_la-Symtab_Command.lo `test -f 'Symtab_Command.cpp' || echo '$(srcdir)/'`Symtab_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Symtab_Command.Tpo $(DEPDIR)/libio_mach_la-Symtab_Command.Plo
#	source='Symtab_Command.cpp' object='libio_mach_la-Symtab_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Symtab_Command.lo `test -f 'Symtab_Command.cpp' || echo '$(srcdir)/'`Symtab_Command.cpp

libio_mach_la-Thread_Command.lo: Thread_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Thread_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Thread_Command.Tpo -c -o libio_mach_la-Thread_Command.lo `test -f 'Thread_Command.cpp' || echo '$(srcdir)/'`Thread_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Thread_Command.Tpo $(DEPDIR)/libio_mach_la-Thread_Command.Plo
#	source='Thread_Command.cpp' object='libio_mach_la-Thread_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Thread_Command.lo `test -f 'Thread_Command.cpp' || echo '$(srcdir)/'`Thread_Command.cpp

libio_mach_la-Twolevel_Hint.lo: Twolevel_Hint.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Twolevel_Hint.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Twolevel_Hint.Tpo -c -o libio_mach_la-Twolevel_Hint.lo `test -f 'Twolevel_Hint.cpp' || echo '$(srcdir)/'`Twolevel_Hint.cpp
	mv -f $(DEPDIR)/libio_mach_la-Twolevel_Hint.Tpo $(DEPDIR)/libio_mach_la-Twolevel_Hint.Plo
#	source='Twolevel_Hint.cpp' object='libio_mach_la-Twolevel_Hint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Twolevel_Hint.lo `test -f 'Twolevel_Hint.cpp' || echo '$(srcdir)/'`Twolevel_Hint.cpp

libio_mach_la-Twolevel_Hints_Command.lo: Twolevel_Hints_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-Twolevel_Hints_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-Twolevel_Hints_Command.Tpo -c -o libio_mach_la-Twolevel_Hints_Command.lo `test -f 'Twolevel_Hints_Command.cpp' || echo '$(srcdir)/'`Twolevel_Hints_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-Twolevel_Hints_Command.Tpo $(DEPDIR)/libio_mach_la-Twolevel_Hints_Command.Plo
#	source='Twolevel_Hints_Command.cpp' object='libio_mach_la-Twolevel_Hints_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-Twolevel_Hints_Command.lo `test -f 'Twolevel_Hints_Command.cpp' || echo '$(srcdir)/'`Twolevel_Hints_Command.cpp

libio_mach_la-UUID_Command.lo: UUID_Command.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libio_mach_la-UUID_Command.lo -MD -MP -MF $(DEPDIR)/libio_mach_la-UUID_Command.Tpo -c -o libio_mach_la-UUID_Command.lo `test -f 'UUID_Command.cpp' || echo '$(srcdir)/'`UUID_Command.cpp
	mv -f $(DEPDIR)/libio_mach_la-UUID_Command.Tpo $(DEPDIR)/libio_mach_la-UUID_Command.Plo
#	source='UUID_Command.cpp' object='libio_mach_la-UUID_Command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libio_mach_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libio_mach_la-UUID_Command.lo `test -f 'UUID_Command.cpp' || echo '$(srcdir)/'`UUID_Command.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nobase_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-nobase_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-local clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nobase_includeHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-nobase_includeHEADERS


clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
