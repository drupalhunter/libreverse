#ifndef SECTION_COMMAND_64_H
#define SECTION_COMMAND_64_H

#include "Load_Command.h"
#include <vector>

namespace libreverse { namespace mach_module {

  class Section_Command_64 : public Load_Command {
  public:

    Section_Command_64 ( boost::uint32_t cmd, boost::uint32_t cmdsize );

    virtual ~Section_Command_64(){}

    virtual void convert ( bool need_convert );

    virtual std::string to_String (void);

  private:

    std::vector<boost::uint8_t> m_sectname;
    std::vector<boost::uint8_t> m_segname;

    boost::uint32_t m_cmd;
    boost::uint32_t m_cmdsize;
    boost::uint64_t m_addr;
    boost::uint64_t m_size;
    boost::uint32_t m_offset;
    boost::uint32_t m_align;
    boost::uint32_t m_reloff;
    boost::uint32_t m_nreloc;
    boost::uint32_t m_flags;
    boost::uint32_t m_reserved1;
    boost::uint32_t m_reserved2;
  };

} /* namespace mach_module */
} /* namespace libreverse */


#endif /* SECTION_COMMAND_64_H */
