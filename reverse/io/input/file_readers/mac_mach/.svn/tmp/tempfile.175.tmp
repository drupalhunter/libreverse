#ifndef ROUTINES_COMMAND_H
#define ROUTINES_COMMAND_H

#include "Load_Command.h"
#include <vector>

namespace libreverse
{
    namespace mach_module
    {

        class Routines_Command : public Load_Command
        {
            public:

                friend class Mach_File;

                /*!
                 * \brief Default Constructor
                 *
                 * \param cmd  cmd Unsigned integer (LC_ROUTINES)
                 * \param cmdsize Size of this command
                 */
                Routines_Command ( boost::uint32_t cmd, boost::uint32_t cmdsize );

                /*! \brief Default Destructor */
                virtual ~Routines_Command() {}

                /*!
                 * \brief Convert the byte order of the command values
                 *
                 * \param need_convert TRUE it is necessary to convert the byte_order otherwise nothing is done
                 */
                virtual void convert ( bool need_convert );

                /*!
                 * \brief Return a formatted string representation of the Routines_Command
                 *
                 * \return Formatted output string of Routines_Command object
                 */
                virtual std::string to_String ( void );

            private:

                /*! \brief Command id (LC_ROUTINES) */
                boost::uint32_t m_cmd;

                /*! \brief Size of this command */
                boost::uint32_t m_cmdsize;

                /*! \brief An integer specifying the virtual memory address of the initialization function. */
                boost::uint32_t m_init_address;

                /*! \brief An integer specifying the index into the module table of the module containing the initialization
                 *         function.
                 */
                boost::uint32_t m_init_module;

                /*! \brief Reserved for future use. Set this field to 0. */
                boost::uint32_t m_reserved1;

                /*! \brief Reserved for future use. Set this field to 0. */
                boost::uint32_t m_reserved2;

                /*! \brief Reserved for future use. Set this field to 0. */
                boost::uint32_t m_reserved3;

                /*! \brief Reserved for future use. Set this field to 0. */
                boost::uint32_t m_reserved4;

                /*! \brief Reserved for future use. Set this field to 0. */
                boost::uint32_t m_reserved5;

                /*! \brief Reserved for future use. Set this field to 0. */
                boost::uint32_t m_reserved6;
        };

    } /* namespace mach_module */
} /* namespace libreverse */


#endif /* ROUTINES_COMMAND_H */
