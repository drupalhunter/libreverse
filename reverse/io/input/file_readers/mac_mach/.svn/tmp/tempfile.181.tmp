#include "Dylinker_Command.h"
#include "LC_Str.h"
#include "libreverse/io/Byte_Converter.h"
#include <sstream>
#include <boost/format.hpp>

namespace libreverse
{
    namespace mach_module
    {

        Dylinker_Command::Dylinker_Command ( boost::uint32_t cmd, boost::uint32_t cmdsize )
                : m_cmd ( cmd ),
                m_cmdsize ( cmdsize ),
                m_name ( new LC_Str() )
        {}

        void
        Dylinker_Command::convert ( bool need_convert )
        {
            if ( need_convert )
            {
                io::Byte_Converter::convert ( m_cmd );
                io::Byte_Converter::convert ( m_cmdsize );
                m_name->convert ( need_convert );
            }
        }

                std::string
        Dylinker_Command::to_String ( void )
        {
            std::stringstream output;

            output << "Dylinker Command:" << std::endl
            << boost::format ( "  Command Id: %1%" ) % m_cmd << std::endl
            << boost::format ( "  Command Size: %1%" ) % m_cmdsize << std::endl
            << m_name->to_String();

            return output.str();
        }
    } /* namespace mach_module */
} /* namespace libreverse */
