#include <reverse/io/input/file_readers/linux_elf/elf_cris.hpp>
#include <reverse/trace.hpp>

namespace reverse {
  namespace io {
    namespace input {
      namespace file_readers {
	namespace linux_elf {

	  inline std::string
	  elf_cris::get_type ( boost::uint32_t type )
	  {
	    trace::io_detail ( "Entering Elf_cris::get_Type" );

	    std::string output;

	    switch (type)
	      {
                /* Relocations.  */
	      case 0: output = "R_CRIS_NONE"; break;
	      case 1: output = "R_CRIS_8"; break;
	      case 2: output = "R_CRIS_16"; break;
	      case 3: output = "R_CRIS_32"; break;

                /* The "PC" position is the location right after the relocation.  */
	      case 4: output = "R_CRIS_8_PCREL"; break;
	      case 5: output = "R_CRIS_16_PCREL"; break;
	      case 6: output = "R_CRIS_32_PCREL"; break;

	      case 7: output = "R_CRIS_GNU_VTINHERIT"; break;
	      case 8: output = "R_CRIS_GNU_VTENTRY"; break;

                /* Copy contents at dynlinking.  Generated by the linker.
                   The BFD equivalent is BFD_RELOC_CRIS_COPY.  */
	      case 9: output = "R_CRIS_COPY"; break;

                /* Create GOT entry.  Generated by the linker.
                   The BFD equivalent is BFD_RELOC_CRIS_GLOB_DAT.  */
	      case 10: output = "R_CRIS_GLOB_DAT"; break;

                /* Create PLT entry.  Generated by the linker.
                   The BFD equivalent is BFD_RELOC_CRIS_JUMP_SLOT.  */
	      case 11: output = "R_CRIS_JUMP_SLOT"; break;

                /* Adjust by program base.  Generated by the linker.
                   The BFD equivalent is BFD_RELOC_CRIS_RELATIVE.  */
	      case 12: output = "R_CRIS_RELATIVE"; break;

                /* A 16-bit offset to entry in GOT and request to create GOT entry for
                   that symbol.
                   The BFD equivalent is BFD_RELOC_CRIS_16_GOT.  */
	      case 13: output = "R_CRIS_16_GOT"; break;

                /* A 32-bit offset to entry in GOT and request to create GOT entry for
                   that symbol.
                   The BFD equivalent is BFD_RELOC_CRIS_32_GOT.  */
	      case 14: output = "R_CRIS_32_GOT"; break;

                /* A 16-bit offset to entry in PLT part of GOT and request to create PLT
                   entry for that symbol.
                   The BFD equivalent is BFD_RELOC_CRIS_16_GOTPLT.  */
	      case 15: output = "R_CRIS_16_GOTPLT"; break;

                /* A 32-bit offset to entry in PLT part of GOT and request to create PLT
                   entry for that symbol.
                   The BFD equivalent is BFD_RELOC_CRIS_32_GOTPLT.  */
	      case 16: output = "R_CRIS_32_GOTPLT"; break;

                /* A 32-bit offset from GOT to (local) symbol: no GOT entry should be
                   necessary.
                   The BFD equivalent is BFD_RELOC_CRIS_32_GOTREL.  */
	      case 17: output = "R_CRIS_32_GOTREL"; break;

                /* A 32-bit offset from GOT to entry for this symbol in PLT and request
                   to create PLT entry for symbol.
                   The BFD equivalent is BFD_RELOC_CRIS_32_GOTREL.  */
	      case 18: output = "R_CRIS_32_PLT_GOTREL"; break;

                /* A 32-bit offset from location after this relocation (addend specifies
                   offset) to entry for this symbol in PLT and request to create PLT
                   entry for symbol.
                   The BFD equivalent is BFD_RELOC_CRIS_32_PLT_PCREL.  */
	      case 19: output = "R_CRIS_32_PLT_PCREL"; break;

                /* No other relocs must be visible outside the assembler.  */
	      default:
                {
		  trace::io_error ( "Unknown cris relocation type: %1%", type );
		  output = "unknown";
                }
	      }
	
	    trace::io_detail ( "Exiting Elf_cris::get_Type" );

	    return output;
	  }

	} // namespace linux_elf
      } // namespace file_readers
    } // namespace input
  } //  namespace io
} // namespace reverse

