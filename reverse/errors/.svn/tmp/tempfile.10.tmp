#include "Internal_Exception.h"

namespace libreverse { namespace errors {

    const char* Internal_Exception::m_exception_name = "Internal_Exception";

    const char* Internal_Exception::m_messages [] = {
        "String Parameter given was empty.\nThe parameter must NOT be empty.",  // EMPTY_STRING
        "Input value was not an acceptable value for this function.\nDouble check the calling function to confirm the parameter value.", // INVALID_VALUE
        "Input pointer is not initialized. Double check where the call is make to this function to ensure the pointer is initialized.", // NULL_POINTER
        "Unable to allocate memory for the required object. This may be a indicator of a memory leak or non-enough system memory to process the input file.", // BAD_ALLOC
        "Unsupported feature was requested. Contact the developers of libreverse if you feel that this feature should be supported", // UNSUPPORTED_FEATURE
        "Unable to perform I/O operation", // IO_ERROR
    };

    Internal_Exception::Internal_Exception ( boost::uint32_t message_id )
        : Reverse_Exception ( message_id )
    {}

    const char*
    Internal_Exception::what (void) const throw ()
    {
        return m_messages[m_id];
    }

    const char*
    Internal_Exception::name (void) const throw ()
    {
        return m_exception_name;
    }

} /* namespace errors */
} /* namespace libreverse */

