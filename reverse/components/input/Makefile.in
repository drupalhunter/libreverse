# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = $(am__EXEEXT_1)
TESTS = $(am__EXEEXT_1)
subdir = libreverse/components/input
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/boost.m4 \
	$(top_srcdir)/m4/compiler.m4 $(top_srcdir)/m4/expat.m4 \
	$(top_srcdir)/m4/icu.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/libreverse/include/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libcomp_input_la_LIBADD =
am_libcomp_input_la_OBJECTS = libcomp_input_la-Arch_Type_Detector.lo \
	libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.lo \
	libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.lo \
	libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.lo \
	libcomp_input_la-Arch_Type_Detector_Java_Algorithm.lo \
	libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.lo \
	libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.lo \
	libcomp_input_la-Code_Section_Detector.lo \
	libcomp_input_la-Code_Section_Detector_Algorithm_Factory.lo \
	libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.lo \
	libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.lo \
	libcomp_input_la-Code_Section_Detector_Java_Algorithm.lo \
	libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.lo \
	libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.lo \
	libcomp_input_la-Compiler_Classifier.lo \
	libcomp_input_la-Data_Section_Detector.lo \
	libcomp_input_la-Data_Section_Detector_Algorithm_Factory.lo \
	libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.lo \
	libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.lo \
	libcomp_input_la-Data_Section_Detector_Java_Algorithm.lo \
	libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.lo \
	libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.lo \
	libcomp_input_la-Entry_Point_Detector.lo \
	libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.lo \
	libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.lo \
	libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.lo \
	libcomp_input_la-Entry_Point_Detector_Java_Algorithm.lo \
	libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.lo \
	libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.lo \
	libcomp_input_la-File_Header_Printer.lo \
	libcomp_input_la-File_Type_Detector.lo \
	libcomp_input_la-Memory_Map_Producer.lo \
	libcomp_input_la-Tevis_Unknown_Region_Checker.lo \
	libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.lo \
	libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.lo \
	libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.lo \
	libcomp_input_la-Tevis_Zero_Filled_Checker.lo \
	libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.lo \
	libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.lo \
	libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.lo \
	libcomp_input_la-Unpacker.lo \
	libcomp_input_la-Unpacker_Algorithm_Factory.lo \
	libcomp_input_la-Unpacker_Java_Algorithm.lo \
	libcomp_input_la-Unpacker_X86_Algorithm.lo
libcomp_input_la_OBJECTS = $(am_libcomp_input_la_OBJECTS)
am__EXEEXT_1 = test_arch_type_detector$(EXEEXT)
am_test_arch_type_detector_OBJECTS =  \
	test_arch_type_detector-test_arch_type_detector.$(OBJEXT)
test_arch_type_detector_OBJECTS =  \
	$(am_test_arch_type_detector_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/libreverse/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcomp_input_la_SOURCES) \
	$(test_arch_type_detector_SOURCES)
DIST_SOURCES = $(libcomp_input_la_SOURCES) \
	$(test_arch_type_detector_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LIBS = @BOOST_LIBS@
BOOST_LIBS_R = @BOOST_LIBS_R@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPAT_CFLAGS = @EXPAT_CFLAGS@
EXPAT_LIBS = @EXPAT_LIBS@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
ICU_CFLAGS = @ICU_CFLAGS@
ICU_LIBS = @ICU_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = \
        grnn \
        instruction_decoders \
        .

TEST_PROGS = test_arch_type_detector
test_arch_type_detector_CPPFLAGS = -I$(top_srcdir)/
test_arch_type_detector_SOURCES = test_arch_type_detector.cpp
test_arch_type_detector_DEPENDENCIES = $(top_builddir)/libreverse/libreverse.la
test_arch_type_detector_LDADD = -lboost_unit_test_framework -L$(top_builddir)/libreverse -lreverse -lboost_date_time -lexpat
noinst_LTLIBRARIES = libcomp_input.la
libcomp_input_la_CPPFLAGS = \
  -I$(top_srcdir) \
  -DCONFIG_DIRECTORY='"$(sysconfdir)/$(PACKAGE)"'

libcomp_input_la_SOURCES = \
  Arch_Type_Detector.cpp \
  Arch_Type_Detector_Algorithm_Factory.cpp \
  Arch_Type_Detector_Elf32_Algorithm.cpp \
  Arch_Type_Detector_Elf64_Algorithm.cpp \
  Arch_Type_Detector_Java_Algorithm.cpp \
  Arch_Type_Detector_WPEF32_Algorithm.cpp \
  Arch_Type_Detector_WPEF64_Algorithm.cpp \
  Code_Section_Detector.cpp \
  Code_Section_Detector_Algorithm_Factory.cpp \
  Code_Section_Detector_Elf32_Algorithm.cpp \
  Code_Section_Detector_Elf64_Algorithm.cpp \
  Code_Section_Detector_Java_Algorithm.cpp \
  Code_Section_Detector_WPEF32_Algorithm.cpp \
  Code_Section_Detector_WPEF64_Algorithm.cpp \
  Compiler_Classifier.cpp \
  Data_Section_Detector.cpp \
  Data_Section_Detector_Algorithm_Factory.cpp \
  Data_Section_Detector_Elf32_Algorithm.cpp \
  Data_Section_Detector_Elf64_Algorithm.cpp \
  Data_Section_Detector_Java_Algorithm.cpp \
  Data_Section_Detector_WPEF32_Algorithm.cpp \
  Data_Section_Detector_WPEF64_Algorithm.cpp \
  Entry_Point_Detector.cpp \
  Entry_Point_Detector_Algorithm_Factory.cpp \
  Entry_Point_Detector_Elf32_Algorithm.cpp \
  Entry_Point_Detector_Elf64_Algorithm.cpp \
  Entry_Point_Detector_Java_Algorithm.cpp \
  Entry_Point_Detector_WPEF32_Algorithm.cpp \
  Entry_Point_Detector_WPEF64_Algorithm.cpp \
  File_Header_Printer.cpp \
  File_Type_Detector.cpp \
  Memory_Map_Producer.cpp \
  Tevis_Unknown_Region_Checker.cpp \
  Tevis_Unknown_Region_Checker_Algorithm_Factory.cpp \
  Tevis_Unknown_Region_Checker_ELF_Algorithm.cpp \
  Tevis_Unknown_Region_Checker_WPEF_Algorithm.cpp \
  Tevis_Zero_Filled_Checker.cpp \
  Tevis_Zero_Filled_Checker_Algorithm_Factory.cpp \
  Tevis_Zero_Filled_Checker_ELF_Algorithm.cpp \
  Tevis_Zero_Filled_Checker_WPEF_Algorithm.cpp \
  Unpacker.cpp \
  Unpacker_Algorithm_Factory.cpp \
  Unpacker_Java_Algorithm.cpp \
  Unpacker_X86_Algorithm.cpp

noinst_HEADERS = \
  Arch_Type_Detector.h \
  Arch_Type_Detector_Algorithm.h \
  Arch_Type_Detector_Algorithm_Factory.h \
  Arch_Type_Detector_Elf32_Algorithm.h \
  Arch_Type_Detector_Elf64_Algorithm.h \
  Arch_Type_Detector_Java_Algorithm.h \
  Arch_Type_Detector_WPEF32_Algorithm.h \
  Arch_Type_Detector_WPEF64_Algorithm.h \
  Code_Section_Detector.h \
  Code_Section_Detector_Algorithm.h \
  Code_Section_Detector_Algorithm_Factory.h \
  Code_Section_Detector_Elf32_Algorithm.h \
  Code_Section_Detector_Elf64_Algorithm.h \
  Code_Section_Detector_Java_Algorithm.h \
  Code_Section_Detector_WPEF32_Algorithm.h \
  Code_Section_Detector_WPEF64_Algorithm.h \
  Compiler_Classifier.h \
  Data_Section_Detector.h \
  Data_Section_Detector_Algorithm.h \
  Data_Section_Detector_Algorithm_Factory.h \
  Data_Section_Detector_Elf32_Algorithm.h \
  Data_Section_Detector_Elf64_Algorithm.h \
  Data_Section_Detector_Java_Algorithm.h \
  Data_Section_Detector_WPEF32_Algorithm.h \
  Data_Section_Detector_WPEF64_Algorithm.h \
  Entry_Point_Detector.h \
  Entry_Point_Detector_Algorithm.h \
  Entry_Point_Detector_Algorithm_Factory.h \
  Entry_Point_Detector_Elf32_Algorithm.h \
  Entry_Point_Detector_Elf64_Algorithm.h \
  Entry_Point_Detector_Java_Algorithm.h \
  Entry_Point_Detector_WPEF32_Algorithm.h \
  Entry_Point_Detector_WPEF64_Algorithm.h \
  File_Header_Printer.h \
  File_Type_Detector.h \
  Memory_Map_Producer.h \
  Tevis_Unknown_Region_Checker.h \
  Tevis_Unknown_Region_Checker_Algorithm.h \
  Tevis_Unknown_Region_Checker_Algorithm_Factory.h \
  Tevis_Unknown_Region_Checker_ELF_Algorithm.h \
  Tevis_Unknown_Region_Checker_WPEF_Algorithm.h \
  Tevis_Zero_Filled_Checker.h \
  Tevis_Zero_Filled_Checker_Algorithm.h \
  Tevis_Zero_Filled_Checker_Algorithm_Factory.h \
  Tevis_Zero_Filled_Checker_ELF_Algorithm.h \
  Tevis_Zero_Filled_Checker_WPEF_Algorithm.h \
  Unpacker.h \
  Unpacker_Algorithm.h \
  Unpacker_Algorithm_Factory.h \
  Unpacker_Java_Algorithm.h \
  Unpacker_X86_Algorithm.h

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libreverse/components/input/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libreverse/components/input/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcomp_input.la: $(libcomp_input_la_OBJECTS) $(libcomp_input_la_DEPENDENCIES) 
	$(CXXLINK)  $(libcomp_input_la_OBJECTS) $(libcomp_input_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
test_arch_type_detector$(EXEEXT): $(test_arch_type_detector_OBJECTS) $(test_arch_type_detector_DEPENDENCIES) 
	@rm -f test_arch_type_detector$(EXEEXT)
	$(CXXLINK) $(test_arch_type_detector_OBJECTS) $(test_arch_type_detector_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Arch_Type_Detector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Java_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Code_Section_Detector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Code_Section_Detector_Algorithm_Factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Code_Section_Detector_Java_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Compiler_Classifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Data_Section_Detector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Data_Section_Detector_Algorithm_Factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Data_Section_Detector_Java_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Entry_Point_Detector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Java_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-File_Header_Printer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-File_Type_Detector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Memory_Map_Producer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Unpacker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Unpacker_Algorithm_Factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Unpacker_Java_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcomp_input_la-Unpacker_X86_Algorithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_arch_type_detector-test_arch_type_detector.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libcomp_input_la-Arch_Type_Detector.lo: Arch_Type_Detector.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Arch_Type_Detector.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Arch_Type_Detector.Tpo -c -o libcomp_input_la-Arch_Type_Detector.lo `test -f 'Arch_Type_Detector.cpp' || echo '$(srcdir)/'`Arch_Type_Detector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Arch_Type_Detector.Tpo $(DEPDIR)/libcomp_input_la-Arch_Type_Detector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arch_Type_Detector.cpp' object='libcomp_input_la-Arch_Type_Detector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Arch_Type_Detector.lo `test -f 'Arch_Type_Detector.cpp' || echo '$(srcdir)/'`Arch_Type_Detector.cpp

libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.lo: Arch_Type_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.Tpo -c -o libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.lo `test -f 'Arch_Type_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.Tpo $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arch_Type_Detector_Algorithm_Factory.cpp' object='libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Arch_Type_Detector_Algorithm_Factory.lo `test -f 'Arch_Type_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Algorithm_Factory.cpp

libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.lo: Arch_Type_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.Tpo -c -o libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.lo `test -f 'Arch_Type_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arch_Type_Detector_Elf32_Algorithm.cpp' object='libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Arch_Type_Detector_Elf32_Algorithm.lo `test -f 'Arch_Type_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Elf32_Algorithm.cpp

libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.lo: Arch_Type_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.Tpo -c -o libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.lo `test -f 'Arch_Type_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arch_Type_Detector_Elf64_Algorithm.cpp' object='libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Arch_Type_Detector_Elf64_Algorithm.lo `test -f 'Arch_Type_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Elf64_Algorithm.cpp

libcomp_input_la-Arch_Type_Detector_Java_Algorithm.lo: Arch_Type_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Arch_Type_Detector_Java_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Java_Algorithm.Tpo -c -o libcomp_input_la-Arch_Type_Detector_Java_Algorithm.lo `test -f 'Arch_Type_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Java_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_Java_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arch_Type_Detector_Java_Algorithm.cpp' object='libcomp_input_la-Arch_Type_Detector_Java_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Arch_Type_Detector_Java_Algorithm.lo `test -f 'Arch_Type_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_Java_Algorithm.cpp

libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.lo: Arch_Type_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.Tpo -c -o libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.lo `test -f 'Arch_Type_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arch_Type_Detector_WPEF32_Algorithm.cpp' object='libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Arch_Type_Detector_WPEF32_Algorithm.lo `test -f 'Arch_Type_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_WPEF32_Algorithm.cpp

libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.lo: Arch_Type_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.Tpo -c -o libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.lo `test -f 'Arch_Type_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Arch_Type_Detector_WPEF64_Algorithm.cpp' object='libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Arch_Type_Detector_WPEF64_Algorithm.lo `test -f 'Arch_Type_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Arch_Type_Detector_WPEF64_Algorithm.cpp

libcomp_input_la-Code_Section_Detector.lo: Code_Section_Detector.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Code_Section_Detector.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Code_Section_Detector.Tpo -c -o libcomp_input_la-Code_Section_Detector.lo `test -f 'Code_Section_Detector.cpp' || echo '$(srcdir)/'`Code_Section_Detector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Code_Section_Detector.Tpo $(DEPDIR)/libcomp_input_la-Code_Section_Detector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Code_Section_Detector.cpp' object='libcomp_input_la-Code_Section_Detector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Code_Section_Detector.lo `test -f 'Code_Section_Detector.cpp' || echo '$(srcdir)/'`Code_Section_Detector.cpp

libcomp_input_la-Code_Section_Detector_Algorithm_Factory.lo: Code_Section_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Code_Section_Detector_Algorithm_Factory.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Algorithm_Factory.Tpo -c -o libcomp_input_la-Code_Section_Detector_Algorithm_Factory.lo `test -f 'Code_Section_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Algorithm_Factory.Tpo $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Algorithm_Factory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Code_Section_Detector_Algorithm_Factory.cpp' object='libcomp_input_la-Code_Section_Detector_Algorithm_Factory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Code_Section_Detector_Algorithm_Factory.lo `test -f 'Code_Section_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Algorithm_Factory.cpp

libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.lo: Code_Section_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.Tpo -c -o libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.lo `test -f 'Code_Section_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Code_Section_Detector_Elf32_Algorithm.cpp' object='libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Code_Section_Detector_Elf32_Algorithm.lo `test -f 'Code_Section_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Elf32_Algorithm.cpp

libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.lo: Code_Section_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.Tpo -c -o libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.lo `test -f 'Code_Section_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Code_Section_Detector_Elf64_Algorithm.cpp' object='libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Code_Section_Detector_Elf64_Algorithm.lo `test -f 'Code_Section_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Elf64_Algorithm.cpp

libcomp_input_la-Code_Section_Detector_Java_Algorithm.lo: Code_Section_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Code_Section_Detector_Java_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Java_Algorithm.Tpo -c -o libcomp_input_la-Code_Section_Detector_Java_Algorithm.lo `test -f 'Code_Section_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Java_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Code_Section_Detector_Java_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Code_Section_Detector_Java_Algorithm.cpp' object='libcomp_input_la-Code_Section_Detector_Java_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Code_Section_Detector_Java_Algorithm.lo `test -f 'Code_Section_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_Java_Algorithm.cpp

libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.lo: Code_Section_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.Tpo -c -o libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.lo `test -f 'Code_Section_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Code_Section_Detector_WPEF32_Algorithm.cpp' object='libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Code_Section_Detector_WPEF32_Algorithm.lo `test -f 'Code_Section_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_WPEF32_Algorithm.cpp

libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.lo: Code_Section_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.Tpo -c -o libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.lo `test -f 'Code_Section_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Code_Section_Detector_WPEF64_Algorithm.cpp' object='libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Code_Section_Detector_WPEF64_Algorithm.lo `test -f 'Code_Section_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Code_Section_Detector_WPEF64_Algorithm.cpp

libcomp_input_la-Compiler_Classifier.lo: Compiler_Classifier.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Compiler_Classifier.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Compiler_Classifier.Tpo -c -o libcomp_input_la-Compiler_Classifier.lo `test -f 'Compiler_Classifier.cpp' || echo '$(srcdir)/'`Compiler_Classifier.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Compiler_Classifier.Tpo $(DEPDIR)/libcomp_input_la-Compiler_Classifier.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Compiler_Classifier.cpp' object='libcomp_input_la-Compiler_Classifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Compiler_Classifier.lo `test -f 'Compiler_Classifier.cpp' || echo '$(srcdir)/'`Compiler_Classifier.cpp

libcomp_input_la-Data_Section_Detector.lo: Data_Section_Detector.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Data_Section_Detector.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Data_Section_Detector.Tpo -c -o libcomp_input_la-Data_Section_Detector.lo `test -f 'Data_Section_Detector.cpp' || echo '$(srcdir)/'`Data_Section_Detector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Data_Section_Detector.Tpo $(DEPDIR)/libcomp_input_la-Data_Section_Detector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Data_Section_Detector.cpp' object='libcomp_input_la-Data_Section_Detector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Data_Section_Detector.lo `test -f 'Data_Section_Detector.cpp' || echo '$(srcdir)/'`Data_Section_Detector.cpp

libcomp_input_la-Data_Section_Detector_Algorithm_Factory.lo: Data_Section_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Data_Section_Detector_Algorithm_Factory.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Algorithm_Factory.Tpo -c -o libcomp_input_la-Data_Section_Detector_Algorithm_Factory.lo `test -f 'Data_Section_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Algorithm_Factory.Tpo $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Algorithm_Factory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Data_Section_Detector_Algorithm_Factory.cpp' object='libcomp_input_la-Data_Section_Detector_Algorithm_Factory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Data_Section_Detector_Algorithm_Factory.lo `test -f 'Data_Section_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Algorithm_Factory.cpp

libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.lo: Data_Section_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.Tpo -c -o libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.lo `test -f 'Data_Section_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Data_Section_Detector_Elf32_Algorithm.cpp' object='libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Data_Section_Detector_Elf32_Algorithm.lo `test -f 'Data_Section_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Elf32_Algorithm.cpp

libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.lo: Data_Section_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.Tpo -c -o libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.lo `test -f 'Data_Section_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Data_Section_Detector_Elf64_Algorithm.cpp' object='libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Data_Section_Detector_Elf64_Algorithm.lo `test -f 'Data_Section_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Elf64_Algorithm.cpp

libcomp_input_la-Data_Section_Detector_Java_Algorithm.lo: Data_Section_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Data_Section_Detector_Java_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Java_Algorithm.Tpo -c -o libcomp_input_la-Data_Section_Detector_Java_Algorithm.lo `test -f 'Data_Section_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Java_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Data_Section_Detector_Java_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Data_Section_Detector_Java_Algorithm.cpp' object='libcomp_input_la-Data_Section_Detector_Java_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Data_Section_Detector_Java_Algorithm.lo `test -f 'Data_Section_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_Java_Algorithm.cpp

libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.lo: Data_Section_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.Tpo -c -o libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.lo `test -f 'Data_Section_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Data_Section_Detector_WPEF32_Algorithm.cpp' object='libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Data_Section_Detector_WPEF32_Algorithm.lo `test -f 'Data_Section_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_WPEF32_Algorithm.cpp

libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.lo: Data_Section_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.Tpo -c -o libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.lo `test -f 'Data_Section_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Data_Section_Detector_WPEF64_Algorithm.cpp' object='libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Data_Section_Detector_WPEF64_Algorithm.lo `test -f 'Data_Section_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Data_Section_Detector_WPEF64_Algorithm.cpp

libcomp_input_la-Entry_Point_Detector.lo: Entry_Point_Detector.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Entry_Point_Detector.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Entry_Point_Detector.Tpo -c -o libcomp_input_la-Entry_Point_Detector.lo `test -f 'Entry_Point_Detector.cpp' || echo '$(srcdir)/'`Entry_Point_Detector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Entry_Point_Detector.Tpo $(DEPDIR)/libcomp_input_la-Entry_Point_Detector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Entry_Point_Detector.cpp' object='libcomp_input_la-Entry_Point_Detector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Entry_Point_Detector.lo `test -f 'Entry_Point_Detector.cpp' || echo '$(srcdir)/'`Entry_Point_Detector.cpp

libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.lo: Entry_Point_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.Tpo -c -o libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.lo `test -f 'Entry_Point_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.Tpo $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Entry_Point_Detector_Algorithm_Factory.cpp' object='libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Entry_Point_Detector_Algorithm_Factory.lo `test -f 'Entry_Point_Detector_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Algorithm_Factory.cpp

libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.lo: Entry_Point_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.Tpo -c -o libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.lo `test -f 'Entry_Point_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Elf32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Entry_Point_Detector_Elf32_Algorithm.cpp' object='libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Entry_Point_Detector_Elf32_Algorithm.lo `test -f 'Entry_Point_Detector_Elf32_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Elf32_Algorithm.cpp

libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.lo: Entry_Point_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.Tpo -c -o libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.lo `test -f 'Entry_Point_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Elf64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Entry_Point_Detector_Elf64_Algorithm.cpp' object='libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Entry_Point_Detector_Elf64_Algorithm.lo `test -f 'Entry_Point_Detector_Elf64_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Elf64_Algorithm.cpp

libcomp_input_la-Entry_Point_Detector_Java_Algorithm.lo: Entry_Point_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Entry_Point_Detector_Java_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Java_Algorithm.Tpo -c -o libcomp_input_la-Entry_Point_Detector_Java_Algorithm.lo `test -f 'Entry_Point_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Java_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_Java_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Entry_Point_Detector_Java_Algorithm.cpp' object='libcomp_input_la-Entry_Point_Detector_Java_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Entry_Point_Detector_Java_Algorithm.lo `test -f 'Entry_Point_Detector_Java_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_Java_Algorithm.cpp

libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.lo: Entry_Point_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.Tpo -c -o libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.lo `test -f 'Entry_Point_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_WPEF32_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Entry_Point_Detector_WPEF32_Algorithm.cpp' object='libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Entry_Point_Detector_WPEF32_Algorithm.lo `test -f 'Entry_Point_Detector_WPEF32_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_WPEF32_Algorithm.cpp

libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.lo: Entry_Point_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.Tpo -c -o libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.lo `test -f 'Entry_Point_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_WPEF64_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Entry_Point_Detector_WPEF64_Algorithm.cpp' object='libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Entry_Point_Detector_WPEF64_Algorithm.lo `test -f 'Entry_Point_Detector_WPEF64_Algorithm.cpp' || echo '$(srcdir)/'`Entry_Point_Detector_WPEF64_Algorithm.cpp

libcomp_input_la-File_Header_Printer.lo: File_Header_Printer.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-File_Header_Printer.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-File_Header_Printer.Tpo -c -o libcomp_input_la-File_Header_Printer.lo `test -f 'File_Header_Printer.cpp' || echo '$(srcdir)/'`File_Header_Printer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-File_Header_Printer.Tpo $(DEPDIR)/libcomp_input_la-File_Header_Printer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='File_Header_Printer.cpp' object='libcomp_input_la-File_Header_Printer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-File_Header_Printer.lo `test -f 'File_Header_Printer.cpp' || echo '$(srcdir)/'`File_Header_Printer.cpp

libcomp_input_la-File_Type_Detector.lo: File_Type_Detector.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-File_Type_Detector.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-File_Type_Detector.Tpo -c -o libcomp_input_la-File_Type_Detector.lo `test -f 'File_Type_Detector.cpp' || echo '$(srcdir)/'`File_Type_Detector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-File_Type_Detector.Tpo $(DEPDIR)/libcomp_input_la-File_Type_Detector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='File_Type_Detector.cpp' object='libcomp_input_la-File_Type_Detector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-File_Type_Detector.lo `test -f 'File_Type_Detector.cpp' || echo '$(srcdir)/'`File_Type_Detector.cpp

libcomp_input_la-Memory_Map_Producer.lo: Memory_Map_Producer.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Memory_Map_Producer.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Memory_Map_Producer.Tpo -c -o libcomp_input_la-Memory_Map_Producer.lo `test -f 'Memory_Map_Producer.cpp' || echo '$(srcdir)/'`Memory_Map_Producer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Memory_Map_Producer.Tpo $(DEPDIR)/libcomp_input_la-Memory_Map_Producer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Memory_Map_Producer.cpp' object='libcomp_input_la-Memory_Map_Producer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Memory_Map_Producer.lo `test -f 'Memory_Map_Producer.cpp' || echo '$(srcdir)/'`Memory_Map_Producer.cpp

libcomp_input_la-Tevis_Unknown_Region_Checker.lo: Tevis_Unknown_Region_Checker.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Unknown_Region_Checker.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker.Tpo -c -o libcomp_input_la-Tevis_Unknown_Region_Checker.lo `test -f 'Tevis_Unknown_Region_Checker.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Unknown_Region_Checker.cpp' object='libcomp_input_la-Tevis_Unknown_Region_Checker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Unknown_Region_Checker.lo `test -f 'Tevis_Unknown_Region_Checker.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker.cpp

libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.lo: Tevis_Unknown_Region_Checker_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.Tpo -c -o libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.lo `test -f 'Tevis_Unknown_Region_Checker_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Unknown_Region_Checker_Algorithm_Factory.cpp' object='libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Unknown_Region_Checker_Algorithm_Factory.lo `test -f 'Tevis_Unknown_Region_Checker_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker_Algorithm_Factory.cpp

libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.lo: Tevis_Unknown_Region_Checker_ELF_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.Tpo -c -o libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.lo `test -f 'Tevis_Unknown_Region_Checker_ELF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker_ELF_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Unknown_Region_Checker_ELF_Algorithm.cpp' object='libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Unknown_Region_Checker_ELF_Algorithm.lo `test -f 'Tevis_Unknown_Region_Checker_ELF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker_ELF_Algorithm.cpp

libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.lo: Tevis_Unknown_Region_Checker_WPEF_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.Tpo -c -o libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.lo `test -f 'Tevis_Unknown_Region_Checker_WPEF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker_WPEF_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Unknown_Region_Checker_WPEF_Algorithm.cpp' object='libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Unknown_Region_Checker_WPEF_Algorithm.lo `test -f 'Tevis_Unknown_Region_Checker_WPEF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Unknown_Region_Checker_WPEF_Algorithm.cpp

libcomp_input_la-Tevis_Zero_Filled_Checker.lo: Tevis_Zero_Filled_Checker.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Zero_Filled_Checker.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker.Tpo -c -o libcomp_input_la-Tevis_Zero_Filled_Checker.lo `test -f 'Tevis_Zero_Filled_Checker.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Zero_Filled_Checker.cpp' object='libcomp_input_la-Tevis_Zero_Filled_Checker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Zero_Filled_Checker.lo `test -f 'Tevis_Zero_Filled_Checker.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker.cpp

libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.lo: Tevis_Zero_Filled_Checker_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.Tpo -c -o libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.lo `test -f 'Tevis_Zero_Filled_Checker_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Zero_Filled_Checker_Algorithm_Factory.cpp' object='libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Zero_Filled_Checker_Algorithm_Factory.lo `test -f 'Tevis_Zero_Filled_Checker_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker_Algorithm_Factory.cpp

libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.lo: Tevis_Zero_Filled_Checker_ELF_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.Tpo -c -o libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.lo `test -f 'Tevis_Zero_Filled_Checker_ELF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker_ELF_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Zero_Filled_Checker_ELF_Algorithm.cpp' object='libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Zero_Filled_Checker_ELF_Algorithm.lo `test -f 'Tevis_Zero_Filled_Checker_ELF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker_ELF_Algorithm.cpp

libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.lo: Tevis_Zero_Filled_Checker_WPEF_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.Tpo -c -o libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.lo `test -f 'Tevis_Zero_Filled_Checker_WPEF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker_WPEF_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Tevis_Zero_Filled_Checker_WPEF_Algorithm.cpp' object='libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Tevis_Zero_Filled_Checker_WPEF_Algorithm.lo `test -f 'Tevis_Zero_Filled_Checker_WPEF_Algorithm.cpp' || echo '$(srcdir)/'`Tevis_Zero_Filled_Checker_WPEF_Algorithm.cpp

libcomp_input_la-Unpacker.lo: Unpacker.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Unpacker.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Unpacker.Tpo -c -o libcomp_input_la-Unpacker.lo `test -f 'Unpacker.cpp' || echo '$(srcdir)/'`Unpacker.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Unpacker.Tpo $(DEPDIR)/libcomp_input_la-Unpacker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Unpacker.cpp' object='libcomp_input_la-Unpacker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Unpacker.lo `test -f 'Unpacker.cpp' || echo '$(srcdir)/'`Unpacker.cpp

libcomp_input_la-Unpacker_Algorithm_Factory.lo: Unpacker_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Unpacker_Algorithm_Factory.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Unpacker_Algorithm_Factory.Tpo -c -o libcomp_input_la-Unpacker_Algorithm_Factory.lo `test -f 'Unpacker_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Unpacker_Algorithm_Factory.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Unpacker_Algorithm_Factory.Tpo $(DEPDIR)/libcomp_input_la-Unpacker_Algorithm_Factory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Unpacker_Algorithm_Factory.cpp' object='libcomp_input_la-Unpacker_Algorithm_Factory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Unpacker_Algorithm_Factory.lo `test -f 'Unpacker_Algorithm_Factory.cpp' || echo '$(srcdir)/'`Unpacker_Algorithm_Factory.cpp

libcomp_input_la-Unpacker_Java_Algorithm.lo: Unpacker_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Unpacker_Java_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Unpacker_Java_Algorithm.Tpo -c -o libcomp_input_la-Unpacker_Java_Algorithm.lo `test -f 'Unpacker_Java_Algorithm.cpp' || echo '$(srcdir)/'`Unpacker_Java_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Unpacker_Java_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Unpacker_Java_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Unpacker_Java_Algorithm.cpp' object='libcomp_input_la-Unpacker_Java_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Unpacker_Java_Algorithm.lo `test -f 'Unpacker_Java_Algorithm.cpp' || echo '$(srcdir)/'`Unpacker_Java_Algorithm.cpp

libcomp_input_la-Unpacker_X86_Algorithm.lo: Unpacker_X86_Algorithm.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libcomp_input_la-Unpacker_X86_Algorithm.lo -MD -MP -MF $(DEPDIR)/libcomp_input_la-Unpacker_X86_Algorithm.Tpo -c -o libcomp_input_la-Unpacker_X86_Algorithm.lo `test -f 'Unpacker_X86_Algorithm.cpp' || echo '$(srcdir)/'`Unpacker_X86_Algorithm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libcomp_input_la-Unpacker_X86_Algorithm.Tpo $(DEPDIR)/libcomp_input_la-Unpacker_X86_Algorithm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Unpacker_X86_Algorithm.cpp' object='libcomp_input_la-Unpacker_X86_Algorithm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcomp_input_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libcomp_input_la-Unpacker_X86_Algorithm.lo `test -f 'Unpacker_X86_Algorithm.cpp' || echo '$(srcdir)/'`Unpacker_X86_Algorithm.cpp

test_arch_type_detector-test_arch_type_detector.o: test_arch_type_detector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_arch_type_detector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_arch_type_detector-test_arch_type_detector.o -MD -MP -MF $(DEPDIR)/test_arch_type_detector-test_arch_type_detector.Tpo -c -o test_arch_type_detector-test_arch_type_detector.o `test -f 'test_arch_type_detector.cpp' || echo '$(srcdir)/'`test_arch_type_detector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_arch_type_detector-test_arch_type_detector.Tpo $(DEPDIR)/test_arch_type_detector-test_arch_type_detector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_arch_type_detector.cpp' object='test_arch_type_detector-test_arch_type_detector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_arch_type_detector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_arch_type_detector-test_arch_type_detector.o `test -f 'test_arch_type_detector.cpp' || echo '$(srcdir)/'`test_arch_type_detector.cpp

test_arch_type_detector-test_arch_type_detector.obj: test_arch_type_detector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_arch_type_detector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_arch_type_detector-test_arch_type_detector.obj -MD -MP -MF $(DEPDIR)/test_arch_type_detector-test_arch_type_detector.Tpo -c -o test_arch_type_detector-test_arch_type_detector.obj `if test -f 'test_arch_type_detector.cpp'; then $(CYGPATH_W) 'test_arch_type_detector.cpp'; else $(CYGPATH_W) '$(srcdir)/test_arch_type_detector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test_arch_type_detector-test_arch_type_detector.Tpo $(DEPDIR)/test_arch_type_detector-test_arch_type_detector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_arch_type_detector.cpp' object='test_arch_type_detector-test_arch_type_detector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_arch_type_detector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_arch_type_detector-test_arch_type_detector.obj `if test -f 'test_arch_type_detector.cpp'; then $(CYGPATH_W) 'test_arch_type_detector.cpp'; else $(CYGPATH_W) '$(srcdir)/test_arch_type_detector.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am:

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am


clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
